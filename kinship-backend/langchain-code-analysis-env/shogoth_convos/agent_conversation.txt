Lead: Hi, I'm interested in your property but I'm currently out of town. Would it be possible to sign a lease with you remotely?
Leasing Agent: Yes, which unit are you interested in?
Lead: I'm interested in the 2 bedroom unit with a view of the park.
Leasing Agent: That unit is still available. Would you like to sign the lease remotely?
Lead: Yes, I would like to sign the lease remotely. (request_remote_leasing)
Leasing Agent: Great, I'll send you the lease agreement via email. (send_lease_agreement)

Lead: Hi, I saw your property online and it looks perfect for me. Can I schedule a tour? (request_tour)
Leasing Agent: That's great! We have availability this Wednesday at 10am or Thursday at 4pm. Which one works for you? 
Lead: I'm currently out of town. Can you show me the property virtually? (request_virtual_tour)
Leasing Agent: Absolutely, we can arrange a virtual tour for you this Wednesday at 10am. Does that work for you?
Lead: Yes, that works for me. (confirm_tour_time)

Lead: Hi, I'm interested in your property but I'd like to tour it on my own. Is that possible? (request_self_guided_tour)
Leasing Agent: Yes, we offer self-guided tours. How does this Saturday at 1pm sound?
Lead: That works great for me. (confirm_tour_time)
Leasing Agent: Perfect, I've scheduled your self-guided tour for this Saturday at 1pm. 

Lead: Hi, I'm interested in your property but I can't make it in person. Can I schedule a video tour? (request_video_tour)
Leasing Agent: Certainly, we can arrange a video tour for you. When would be a good time for you?
Lead: How about next Friday at 3pm? (request_tour)
Leasing Agent: Next Friday at 3pm works for me. I'll see you then. (confirm_tour_time)

Lead: Hi, I was scheduled to tour your property this Friday but I need to cancel. (cancel_tour)
Leasing Agent: I understand, would you like to reschedule for another time? (reschedule_tour)
Lead: Yes, can we do it next Monday at 2pm? (reschedule_tour)
Leasing Agent: Sure, I've rescheduled your tour for next Monday at 2pm. (confirm_tour_time)

Lead: Hi, I saw another property listed on your website that I'm interested in. Can I tour that one instead? (request_different_property_tour)
Leasing Agent: Sure, we can arrange a tour at our other property. When are you available?
Lead: Can we do it next Wednesday at 1pm? (request_tour)
Leasing Agent: Next Wednesday at 1pm works for me. I'll see you then. (confirm_tour_time)Lead: Hi, I'm interested in your property but I'm currently out of town. Can I get more information and perhaps arrange a virtual tour? (request_more_information) (request_virtual_tour)
Leasing Agent: Absolutely, we can provide you with detailed information about the property and arrange a virtual tour. When would be a good time for you?
Lead: Sometime next week would be great. 
Leasing Agent: How about next Tuesday at 2pm? 
Lead: That works for me. (confirm_tour_time)

Lead: Hi, I was scheduled to tour your property tomorrow but something came up. Can I reschedule? (reschedule_tour)
Leasing Agent: Of course, I understand. When would you like to reschedule the tour for? 
Lead: How about next Tuesday at the same time? (reschedule_tour)
Leasing Agent: That works for me. I've rescheduled your tour for next Tuesday. (confirm_tour_time)

Lead: Hi, I'm interested in your property but I'd prefer a video tour. Can I schedule one? (request_video_tour)
Leasing Agent: Definitely, we can arrange a video tour for you. When would be a good time for you?
Lead: Next Wednesday at 1pm works for me. (request_tour)
Leasing Agent: Great, I've scheduled a video tour for next Wednesday at 1pm. (confirm_tour_time) 

Lead: Hi, I'm considering several properties but yours really caught my eye. Can I take a self-guided tour? (request_self_guided_tour)
Leasing Agent: Yes, we offer self-guided tours. When would you like to come in?
Lead: Can I come in this Friday at 2pm? (request_tour)
Leasing Agent: I've scheduled your self-guided tour for this Friday at 2pm. (confirm_tour_time)

Lead: Hi, I was scheduled to tour your property this Thursday but I need to cancel. (cancel_tour)
Leasing Agent: I understand, would you like to reschedule for another time? (reschedule_tour)
Lead: Yes, can we do it next Monday at 10am? (reschedule_tour)
Leasing Agent: Sure, I've rescheduled your tour for next Monday at 10am. (confirm_tour_time)

Lead: Hi, I saw another property on your website that I'm interested in. Can I get more information about that one? (request_more_information)
Leasing Agent: Absolutely, I can provide information about the amenities, available units, and neighborhood of our other property. Would you like to schedule a tour for that property?
Lead: Yes, I would like to see it. Can we schedule a tour for next Friday? (request_tour)
Leasing Agent: Next Friday works for me. I'll see you then. (confirm_tour_time)

Lead: Hi, I'm interested in your property but I'm currently out of town. Can I arrange a virtual tour? (request_virtual_tour)
Leasing Agent: Absolutely, we can arrange a virtual tour for you. When would be a good time for you?
Lead: Sometime next week would be great. 
Leasing Agent: How about next Wednesday at 4pm? 
Lead: That works for me. (confirm_tour_time) 

Lead: Hi, I'm interested in your property but I'd like to tour it on my own. Is that possible? (request_self_guided_tour)
Leasing Agent: Yes, we offer self-guided tours. How does this Saturday at 1pm sound?
Lead: That works great for me. (confirm_tour_time)
Leasing Agent: Perfect, I've scheduled your self-guided tour for this Saturday at 1pm. 

Lead: Hi, I'm interested in your property but I can't make it in person. Can I schedule a video tour? (request_video_tour)
Leasing Agent: Certainly, we can arrange a video tour for you. When would be a good time for you?
Lead: How about next Friday at 3pm? (request_tour)
Leasing Agent: Next Friday at 3pm works for me. I'll see you then. (confirm_tour_time)

Lead: Hi, I was scheduled to tour your property this Friday but I need to cancel. (cancel_tour)
Leasing Agent: I understand, would you like to reschedule for another time? (reschedule_tour)
Lead: Yes, can we do it next Monday at 2pm? (reschedule_tour)
Leasing Agent: Sure, I've rescheduled your tour for next Monday at 2pm. (confirm_tour_time)

Lead: Hi, I saw another property listed on your website that I'm interested in. Can I tour that one instead? (request_different_property_tour)
Leasing Agent: Sure, we can arrange a tour at our other property. When are you available?
Lead: Can we do it next Wednesday at 1pm? (request_tour)
Leasing Agent: Next Wednesday at 1pm works for me. I'll see you then. (confirm_tour_time)Lead: Hi, I saw your property online and I'm really interested in it. Can I have more details about it? (request_more_information)
Leasing Agent: Absolutely, I'd be happy to provide more information about our property. We offer amenities like a swimming pool, fitness center, and a pet-friendly environment. Would you like to schedule a tour to see it in person?
Lead: Yes, that sounds great. Can we do it next week? (request_tour)
Leasing Agent: Sure, how about next Tuesday at 10 am?
Lead: That works for me. (confirm_tour_time)

Lead: Hi, I'm interested in your property but can't make it in person. Can we arrange a virtual tour? (request_virtual_tour)
Leasing Agent: Sure, we can arrange a virtual tour for you. When would you like to do it?
Lead: This Friday at 11 am works for me. (request_tour)
Leasing Agent: I've scheduled a virtual tour for this Friday at 11 am. (confirm_tour_time)

Lead: Hi, I was planning to tour your property tomorrow, but I'm not feeling well. Can we reschedule? (reschedule_tour)
Leasing Agent: Of course, I hope you feel better soon. When would you like to reschedule the tour for?
Lead: Can we do it next Monday at the same time? (reschedule_tour)
Leasing Agent: I've rescheduled your tour for next Monday at the same time. (confirm_tour_time)Lead: Hi there, I saw your property online and I'm really interested in it. Can I have more information about the available units? (request_more_information)
Leasing Agent: Absolutely, I'd be happy to provide more information. We have both 1-bedroom and 2-bedroom units available currently. Do you have a preference?
Lead: I would prefer a 2-bedroom unit. What are the lease terms?
Leasing Agent: Our lease terms are typically for 12 months. Would you like to schedule a tour to see a 2-bedroom unit?
Lead: Yes, I would like to see it in person. Can we schedule a tour for next week? (request_tour)
Leasing Agent: Sure, how about next Wednesday at 3 pm?
Lead: Actually, can we do it on Thursday instead? (request_different_tour_time)
Leasing Agent: Of course, I've scheduled your tour for next Thursday at the same time. (confirm_tour_time)The syntax issues with the JSON are as follows:

1. Missing commas between key-value pairs in some places.
2. Extra closing curly braces in some places.
3. Extra closing square brackets at the end.

Here is the corrected JSON:

```json
{
    "data": {
        "months": [
            {
                "month": "09-22",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.134,
                            "delinquent_resident_count": 101,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.112,
                            "delinquent_resident_count": 63,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.124,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    "A+": {},
                    "A-": {},
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.199,
                            "delinquent_resident_count": 404,
                            "resident_count": 2028
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 176,
                            "resident_count": 1334
                        },
                        "total": {
                            "delinquency": 0.173,
                            "delinquent_resident_count": 577,
                            "resident_count": 3326
                        }
                    },
                    "B+": {},
                    "B-": {},
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.261,
                            "delinquent_resident_count": 202,
                            "resident_count": 775
                        },
                        "stakers": {
                            "delinquency": 0.185,
                            "delinquent_resident_count": 94,
                            "resident_count": 509
                        },
                        "total": {
                            "delinquency": 0.231,
                            "delinquent_resident_count": 296,
                            "resident_count": 1284
                        }
                    },
                    "C+": {},
                    "C-": {},
                    "D": {}
                }
            },
            {
                "month": "10-22",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.136,
                            "delinquent_resident_count": 103,
                            "resident_count": 758
                        },
                        "stakers": {
                            "delinquency": 0.11,
                            "delinquent_resident_count": 62,
                            "resident_count": 562
                        },
                        "total": {
                            "delinquency": 0.125,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    "A+": {},
                    "A-": {},
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.205,
                            "delinquent_resident_count": 408,
                            "resident_count": 1992
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 176,
                            "resident_count": 1334
                        },
                        "total": {
                            "delinquency": 0.176,
                            "delinquent_resident_count": 584,
                            "resident_count": 3326
                        }
                    },
                    "B+": {},
                    "B-": {},
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.269,
                            "delinquent_resident_count": 206,
                            "resident_count": 765
                        },
                        "stakers": {
                            "delinquency": 0.185,
                            "delinquent_resident_count": 96,
                            "resident_count": 519
                        },
                        "total": {
                            "delinquency": 0.235,
                            "delinquent_resident_count": 302,
                            "resident_count": 1284
                        }
                    },
                    "C+": {},
                    "C-": {},
                    "D": {}
                }
            },
            {
                "month": "11-22",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.139,
                            "delinquent_resident_count": 105,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.121,
                            "delinquent_resident_count": 68,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.131,
                            "delinquent_resident_count": 173,
                            "resident_count": 1320
                        }
                    },
                    "A+": {},
                    "A-": {},
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.209,
                            "delinquent_resident_count": 415,
                            "resident_count": 1981
                        },
                        "stakers": {
                            "delinquency": 0.129,
                            "delinquent_resident_count": 173,
                            "resident_count": 1345
                        },
                        "total": {
                            "delinquency": 0.177,
                            "delinquent_resident_count": 588,
                            "resident_count": 3326
                        }
                    },
                    "B+": {},
                    "B-": {},
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.278,
                            "delinquent_resident_count": 212,
                            "resident_count": 762
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 106,
                            "resident_count": 522
                        },
                        "total": {
                            "delinquency": 0.248,
                            "delinquent_resident_count": 318,
                            "resident_count": 1284
                        }
                    },
                    "C+": {},
                    "C-": {},
                    "D": {}
                }
            },
            {
                "month": "12-22",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.144,
                            "delinquent_resident_count": 109,
                            "resident_count": 759
                        },
                        "stakers": {
                            "delinquency": 0.114,
                            "delinquent_resident_count": 64,
                            "resident_count": 561
                        },
                        "total": {
                            "delinquency": 0.131,
                            "delinquent_resident_count": 173,
                            "resident_count": 1320
                        }
                    },
                    "A+": {},
                    "A-": {},
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.21,
                            "delinquent_resident_count": 413,
                            "resident_count": 1965
                        },
                        "stakers": {
                            "delinquency": 0.129,
                            "delinquent_resident_count": 176,
                            "resident_count": 1361
                        },
                        "total": {
                            "delinquency": 0.177,
                            "delinquent_resident_count": 589,
                            "resident_count": 3326
                        }
                    },
                    "B+": {},
                    "B-": {},
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.249,
                            "delinquent_resident_count": 214,
                            "resident_count": 764
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 106,
                            "resident_count": 523
                        },
                        "total": {
                            "delinquency": 0.249,
                            "delinquent_resident_count": 320,
                            "resident_count": 1284
                        }
                    },
                    "C+": {},
                    "C-": {},
                    "D": {}
                }
            },
            {
                "month": "01-23",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.142,
                            "delinquent_resident_count": 107,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.115,
                            "delinquent_resident_count": 65,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.13,
                            "delinquent_resident_count": 172,
                            "resident_count": 1320
                        }
                    },
                    "A+": {},
                    "A-": {},
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.216,
                            "delinquent_resident_count": 422,
                            "resident_count": 1950
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 181,
                            "resident_count": 1376
                        },
                        "total": {
                            "delinquency": 0.181,
                            "delinquent_resident_count": 603,
                            "resident_count": 3326
                        }
                    },
                    "B+": {},
                    "B-": {},
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.288,
                            "delinquent_resident_count": 219,
                            "resident_count": 761
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 106,
                            "resident_count": 512
                        },
                        "total": {
                            "delinquency": 0.254,
                            "delinquent_resident_count": 326,
                            "resident_count": 1284
                        }
                    },
                    "C+": {},
                    "C-": {},
                    "D": {}
                }
            },
            {
                "month": "02-23",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.133,
                            "delinquent_resident_count": 101,
                            "resident_count": 759
                        },
                        "stakers": {
                            "delinquency": 0.112,
                            "delinquent_resident_count": 63,
                            "resident_count": 561
                        },
                        "total": {
                            "delinquency": 0.124,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    "A+": {},
                    "A-": {},
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.217,
                            "delinquent_resident_count": 425,
                            "resident_count": 1956
                        },
                        "stakers": {
                            "delinquency": 0.134,
                            "delinquent_resident_count": 1370,
                            "resident_count": 1463
                        },
                        "total": {
                            "delinquency": 0.183,
                            "delinquent_resident_count": 609,
                            "resident_count": 3326
                        }
                    },
                    "B+": {},
                    "B-": {},
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.288,
                            "delinquent_resident_count": 222,
                            "resident_count": 772
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 104,
                            "resident_count": 512
                        },
                        "total": {
                            "delinquency": 0.254,
                            "delinquent_resident_count": 326,
                            "resident_count": 1284
                        }
                    },
                    "C+": {},
                    "C-": {},
                    "D": {}
                }
            }
        ]
    },
    "resource_type": "rental_community",
    "status_code": 200,
    "success": true
}
```{
    "data": {
        "months": [
            {
                "month": "09-22",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.134,
                            "delinquent_resident_count": 101,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.112,
                            "delinquent_resident_count": 63,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.124,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.199,
                            "delinquent_resident_count": 404,
                            "resident_count": 2028
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 176,
                            "resident_count": 1334
                        },
                        "total": {
                            "delinquency": 0.173,
                            "delinquent_resident_count": 577,
                            "resident_count": 3326
                        }
                    },
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.261,
                            "delinquent_resident_count": 202,
                            "resident_count": 775
                        },
                        "stakers": {
                            "delinquency": 0.185,
                            "delinquent_resident_count": 94,
                            "resident_count": 509
                        },
                        "total": {
                            "delinquency": 0.231,
                            "delinquent_resident_count": 296,
                            "resident_count": 1284
                        }
                    },
                    "D": {}
                }
            },
            {
                "month": "10-22",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.136,
                            "delinquent_resident_count": 103,
                            "resident_count": 758
                        },
                        "stakers": {
                            "delinquency": 0.11,
                            "delinquent_resident_count": 62,
                            "resident_count": 562
                        },
                        "total": {
                            "delinquency": 0.125,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.205,
                            "delinquent_resident_count": 408,
                            "resident_count": 1992
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 176,
                            "resident_count": 1334
                        },
                        "total": {
                            "delinquency": 0.176,
                            "delinquent_resident_count": 584,
                            "resident_count": 3326
                        }
                    },
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.269,
                            "delinquent_resident_count": 206,
                            "resident_count": 765
                        },
                        "stakers": {
                            "delinquency": 0.185,
                            "delinquent_resident_count": 96,
                            "resident_count": 519
                        },
                        "total": {
                            "delinquency": 0.235,
                            "delinquent_resident_count": 302,
                            "resident_count": 1284
                        }
                    },
                    "D": {}
                }
            },
            {
                "month": "11-22",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.139,
                            "delinquent_resident_count": 105,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.121,
                            "delinquent_resident_count": 68,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.131,
                            "delinquent_resident_count": 173,
                            "resident_count": 1320
                        }
                    },
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.209,
                            "delinquent_resident_count": 415,
                            "resident_count": 1981
                        },
                        "stakers": {
                            "delinquency": 0.129,
                            "delinquent_resident_count": 173,
                            "resident_count": 1345
                        },
                        "total": {
                            "delinquency": 0.177,
                            "delinquent_resident_count": 588,
                            "resident_count": 3326
                        }
                    },
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.278,
                            "delinquent_resident_count": 212,
                            "resident_count": 762
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 106,
                            "resident_count": 522
                        },
                        "total": {
                            "delinquency": 0.248,
                            "delinquent_resident_count": 318,
                            "resident_count": 1284
                        }
                    },
                    "D": {}
                }
            },
            {
                "month": "12-22",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.144,
                            "delinquent_resident_count": 109,
                            "resident_count": 759
                        },
                        "stakers": {
                            "delinquency": 0.114,
                            "delinquent_resident_count": 64,
                            "resident_count": 561
                        },
                        "total": {
                            "delinquency": 0.131,
                            "delinquent_resident_count": 173,
                            "resident_count": 1320
                        }
                    },
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.21,
                            "delinquent_resident_count": 413,
                            "resident_count": 1965
                        },
                        "stakers": {
                            "delinquency": 0.129,
                            "delinquent_resident_count": 176,
                            "resident_count": 1361
                        },
                        "total": {
                            "delinquency": 0.177,
                            "delinquent_resident_count": 589,
                            "resident_count": 3326
                        }
                    },
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.249,
                            "delinquent_resident_count": 214,
                            "resident_count": 764
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 106,
                            "resident_count": 523
                        },
                        "total": {
                            "delinquency": 0.249,
                            "delinquent_resident_count": 320,
                            "resident_count": 1284
                        }
                    },
                    "D": {}
                }
            },
            {
                "month": "01-23",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.142,
                            "delinquent_resident_count": 107,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.115,
                            "delinquent_resident_count": 65,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.13,
                            "delinquent_resident_count": 172,
                            "resident_count": 1320
                        }
                    },
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.216,
                            "delinquent_resident_count": 422,
                            "resident_count": 1950
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 181,
                            "resident_count": 1376
                        },
                        "total": {
                            "delinquency": 0.181,
                            "delinquent_resident_count": 603,
                            "resident_count": 3326
                        }
                    },
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.288,
                            "delinquent_resident_count": 219,
                            "resident_count": 761
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 106,
                            "resident_count": 512
                        },
                        "total": {
                            "delinquency": 0.254,
                            "delinquent_resident_count": 326,
                            "resident_count": 1284
                        }
                    },
                    "D": {}
                }
            },
            {
                "month": "02-23",
                "account_level": {
                    "A": {
                        "non_stakers": {
                            "delinquency": 0.133,
                            "delinquent_resident_count": 101,
                            "resident_count": 759
                        },
                        "stakers": {
                            "delinquency": 0.112,
                            "delinquent_resident_count": 63,
                            "resident_count": 561
                        },
                        "total": {
                            "delinquency": 0.124,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    "B": {
                        "non_stakers": {
                            "delinquency": 0.217,
                            "delinquent_resident_count": 425,
                            "resident_count": 1956
                        },
                        "stakers": {
                            "delinquency": 0.134,
                            "delinquent_resident_count": 1370,
                            "resident_count": 1463
                        },
                        "total": {
                            "delinquency": 0.183,
                            "delinquent_resident_count": 609,
                            "resident_count": 3326
                        }
                    },
                    "C": {
                        "non_stakers": {
                            "delinquency": 0.288,
                            "delinquent_resident_count": 222,
                            "resident_count": 772
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 104,
                            "resident_count": 512
                        },
                        "total": {
                            "delinquency": 0.254,
                            "delinquent_resident_count": 326,
                            "resident_count": 1284
                        }
                    },
                    "D": {}
                }
            }
        ]
    },
    "resource_type": "rental_community",
    "status_code": 200,
    "success": true
}{
    "data": {
        "months": [
            {
                "month": "09-22",
                "account_level": [
                    {
                        "level": "A",
                        "non_stakers": {
                            "delinquency": 0.134,
                            "delinquent_resident_count": 101,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.112,
                            "delinquent_resident_count": 63,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.124,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    {
                        "level": "B",
                        "non_stakers": {
                            "delinquency": 0.199,
                            "delinquent_resident_count": 404,
                            "resident_count": 2028
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 176,
                            "resident_count": 1334
                        },
                        "total": {
                            "delinquency": 0.173,
                            "delinquent_resident_count": 577,
                            "resident_count": 3326
                        }
                    },
                    {
                        "level": "C",
                        "non_stakers": {
                            "delinquency": 0.261,
                            "delinquent_resident_count": 202,
                            "resident_count": 775
                        },
                        "stakers": {
                            "delinquency": 0.185,
                            "delinquent_resident_count": 94,
                            "resident_count": 509
                        },
                        "total": {
                            "delinquency": 0.231,
                            "delinquent_resident_count": 296,
                            "resident_count": 1284
                        }
                    },
                    {
                        "level": "D",
                        "non_stakers": {},
                        "stakers": {},
                        "total": {}
                    }
                ]
            },
            {
                "month": "10-22",
                "account_level": [
                    {
                        "level": "A",
                        "non_stakers": {
                            "delinquency": 0.136,
                            "delinquent_resident_count": 103,
                            "resident_count": 758
                        },
                        "stakers": {
                            "delinquency": 0.11,
                            "delinquent_resident_count": 62,
                            "resident_count": 562
                        },
                        "total": {
                            "delinquency": 0.125,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    {
                        "level": "B",
                        "non_stakers": {
                            "delinquency": 0.205,
                            "delinquent_resident_count": 408,
                            "resident_count": 1992
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 176,
                            "resident_count": 1334
                        },
                        "total": {
                            "delinquency": 0.176,
                            "delinquent_resident_count": 584,
                            "resident_count": 3326
                        }
                    },
                    {
                        "level": "C",
                        "non_stakers": {
                            "delinquency": 0.269,
                            "delinquent_resident_count": 206,
                            "resident_count": 765
                        },
                        "stakers": {
                            "delinquency": 0.185,
                            "delinquent_resident_count": 96,
                            "resident_count": 519
                        },
                        "total": {
                            "delinquency": 0.235,
                            "delinquent_resident_count": 302,
                            "resident_count": 1284
                        }
                    },
                    {
                        "level": "D",
                        "non_stakers": {},
                        "stakers": {},
                        "total": {}
                    }
                ]
            },
            {
                "month": "11-22",
                "account_level": [
                    {
                        "level": "A",
                        "non_stakers": {
                            "delinquency": 0.139,
                            "delinquent_resident_count": 105,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.121,
                            "delinquent_resident_count": 68,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.131,
                            "delinquent_resident_count": 173,
                            "resident_count": 1320
                        }
                    },
                    {
                        "level": "B",
                        "non_stakers": {
                            "delinquency": 0.209,
                            "delinquent_resident_count": 415,
                            "resident_count": 1981
                        },
                        "stakers": {
                            "delinquency": 0.129,
                            "delinquent_resident_count": 173,
                            "resident_count": 1345
                        },
                        "total": {
                            "delinquency": 0.177,
                            "delinquent_resident_count": 588,
                            "resident_count": 3326
                        }
                    },
                    {
                        "level": "C",
                        "non_stakers": {
                            "delinquency": 0.278,
                            "delinquent_resident_count": 212,
                            "resident_count": 762
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 106,
                            "resident_count": 522
                        },
                        "total": {
                            "delinquency": 0.248,
                            "delinquent_resident_count": 318,
                            "resident_count": 1284
                        }
                    },
                    {
                        "level": "D",
                        "non_stakers": {},
                        "stakers": {},
                        "total": {}
                    }
                ]
            },
            {
                "month": "12-22",
                "account_level": [
                    {
                        "level": "A",
                        "non_stakers": {
                            "delinquency": 0.144,
                            "delinquent_resident_count": 109,
                            "resident_count": 759
                        },
                        "stakers": {
                            "delinquency": 0.114,
                            "delinquent_resident_count": 64,
                            "resident_count": 561
                        },
                        "total": {
                            "delinquency": 0.131,
                            "delinquent_resident_count": 173,
                            "resident_count": 1320
                        }
                    },
                    {
                        "level": "B",
                        "non_stakers": {
                            "delinquency": 0.21,
                            "delinquent_resident_count": 413,
                            "resident_count": 1965
                        },
                        "stakers": {
                            "delinquency": 0.129,
                            "delinquent_resident_count": 176,
                            "resident_count": 1361
                        },
                        "total": {
                            "delinquency": 0.177,
                            "delinquent_resident_count": 589,
                            "resident_count": 3326
                        }
                    },
                    {
                        "level": "C",
                        "non_stakers": {
                            "delinquency": 0.249,
                            "delinquent_resident_count": 214,
                            "resident_count": 764
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 106,
                            "resident_count": 523
                        },
                        "total": {
                            "delinquency": 0.249,
                            "delinquent_resident_count": 320,
                            "resident_count": 1284
                        }
                    },
                    {
                        "level": "D",
                        "non_stakers": {},
                        "stakers": {},
                        "total": {}
                    }
                ]
            },
            {
                "month": "01-23",
                "account_level": [
                    {
                        "level": "A",
                        "non_stakers": {
                            "delinquency": 0.142,
                            "delinquent_resident_count": 107,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.115,
                            "delinquent_resident_count": 65,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.13,
                            "delinquent_resident_count": 172,
                            "resident_count": 1320
                        }
                    },
                    {
                        "level": "B",
                        "non_stakers": {
                            "delinquency": 0.216,
                            "delinquent_resident_count": 422,
                            "resident_count": 1950
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 181,
                            "resident_count": 1376
                        },
                        "total": {
                            "delinquency": 0.181,
                            "delinquent_resident_count": 603,
                            "resident_count": 3326
                        }
                    },
                    {
                        "level": "C",
                        "non_stakers": {
                            "delinquency": 0.288,
                            "delinquent_resident_count": 219,
                            "resident_count": 761
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 106,
                            "resident_count": 512
                        },
                        "total": {
                            "delinquency": 0.254,
                            "delinquent_resident_count": 326,
                            "resident_count": 1284
                        }
                    },
                    {
                        "level": "D",
                        "non_stakers": {},
                        "stakers": {},
                        "total": {}
                    }
                ]
            },
            {
                "month": "02-23",
                "account_level": [
                    {
                        "level": "A",
                        "non_stakers": {
                            "delinquency": 0.133,
                            "delinquent_resident_count": 101,
                            "resident_count": 759
                        },
                        "stakers": {
                            "delinquency": 0.112,
                            "delinquent_resident_count": 63,
                            "resident_count": 561
                        },
                        "total": {
                            "delinquency": 0.124,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    {
                        "level": "B",
                        "non_stakers": {
                            "delinquency": 0.217,
                            "delinquent_resident_count": 425,
                            "resident_count": 1956
                        },
                        "stakers": {
                            "delinquency": 0.134,
                            "delinquent_resident_count": 1370,
                            "resident_count": 1463
                        },
                        "total": {
                            "delinquency": 0.183,
                            "delinquent_resident_count": 609,
                            "resident_count": 3326
                        }
                    },
                    {
                        "level": "C",
                        "non_stakers": {
                            "delinquency": 0.288,
                            "delinquent_resident_count": 222,
                            "resident_count": 772
                        },
                        "stakers": {
                            "delinquency": 0.203,
                            "delinquent_resident_count": 104,
                            "resident_count": 512
                        },
                        "total": {
                            "delinquency": 0.254,
                            "delinquent_resident_count": 326,
                            "resident_count": 1284
                        }
                    },
                    {
                        "level": "D",
                        "non_stakers": {},
                        "stakers": {},
                        "total": {}
                    }
                ]
            }
        ]
    },
    "resource_type": "rental_community",
    "status_code": 200,
    "success": true
}{
    "data": {
        "months": [
            {
                "month": "09-22",
                "network_wide": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.16449704142011834,
                                "delinquent_resident_count": 417,
                                "resident_count": 2535
                            },
                            "stakers": {
                                "delinquency": 0.12884834663625996,
                                "delinquent_resident_count": 226,
                                "resident_count": 1754
                            },
                            "total": {
                                "delinquency": 0.14991839589647937,
                                "delinquent_resident_count": 643,
                                "resident_count": 4289
                            }
                        }
                    },
                    {
                        "A+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "A-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.2037914691943128,
                                "delinquent_resident_count": 430,
                                "resident_count": 2110
                            },
                            "stakers": {
                                "delinquency": 0.13232104121475055,
                                "delinquent_resident_count": 183,
                                "resident_count": 1383
                            },
                            "total": {
                                "delinquency": 0.1754938448325222,
                                "delinquent_resident_count": 613,
                                "resident_count": 3493
                            }
                        }
                    },
                    {
                        "B+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "B-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.2525,
                                "delinquent_resident_count": 202,
                                "resident_count": 800
                            },
                            "stakers": {
                                "delinquency": 0.19421487603305784,
                                "delinquent_resident_count": 94,
                                "resident_count": 484
                            },
                            "total": {
                                "delinquency": 0.23052959501557632,
                                "delinquent_resident_count": 296,
                                "resident_count": 1284
                            }
                        }
                    },
                    {
                        "C+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "C-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "D": {
                            "non_stakers": {
                                "delinquency": 0.2742616033755274,
                                "delinquent_resident_count": 65,
                                "resident_count": 237
                            },
                            "stakers": {
                                "delinquency": 0.1836734693877551,
                                "delinquent_resident_count": 36,
                                "resident_count": 196
                            },
                            "total": {
                                "delinquency": 0.23325635103926096,
                                "delinquent_resident_count": 101,
                                "resident_count": 433
                            }
                        }
                    }
                ]
            },
            {
                "month": "10-22",
                "network_wide": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.168836291913215,
                                "delinquent_resident_count": 428,
                                "resident_count": 2535
                            },
                            "stakers": {
                                "delinquency": 0.1305587229190422,
                                "delinquent_resident_count": 229,
                                "resident_count": 1754
                            },
                            "total": {
                                "delinquency": 0.15318256003730474,
                                "delinquent_resident_count": 657,
                                "resident_count": 4289
                            }
                        }
                    },
                    {
                        "A+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "A-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.20900473933649288,
                                "delinquent_resident_count": 441,
                                "resident_count": 2110
                            },
                            "stakers": {
                                "delinquency": 0.14316702819956617,
                                "delinquent_resident_count": 198,
                                "resident_count": 1383
                            },
                            "total": {
                                "delinquency": 0.18293730317778414,
                                "delinquent_resident_count": 639,
                                "resident_count": 3493
                            }
                        }
                    },
                    {
                        "B+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "B-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.2575,
                                "delinquent_resident_count": 206,
                                "resident_count": 800
                            },
                            "stakers": {
                                "delinquency": 0.19834710743801653,
                                "delinquent_resident_count": 96,
                                "resident_count": 484
                            },
                            "total": {
                                "delinquency": 0.235202492211838,
                                "delinquent_resident_count": 302,
                                "resident_count": 1284
                            }
                        }
                    },
                    {
                        "C+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "C-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "D": {
                            "non_stakers": {
                                "delinquency": 0.27848101265822783,
                                "delinquent_resident_count": 66,
                                "resident_count": 237
                            },
                            "stakers": {
                                "delinquency": 0.20408163265306123,
                                "delinquent_resident_count": 36,
                                "resident_count": 196
                            },
                            "total": {
                                "delinquency": 0.24480369515011546,
                                "delinquent_resident_count": 101,
                                "resident_count": 433
                            }
                        }
                    }
                ]
            },
            {
                "month": "11-22",
                "network_wide": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.17909270216962525,
                                "delinquent_resident_count": 454,
                                "resident_count": 2535
                            },
                            "stakers": {
                                "delinquency": 0.1345496009122007,
                                "delinquent_resident_count": 236,
                                "resident_count": 1754
                            },
                            "total": {
                                "delinquency": 0.1608766612263931,
                                "delinquent_resident_count": 690,
                                "resident_count": 4289
                            }
                        }
                    },
                    {
                        "A+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "A-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.2123222748815166,
                                "delinquent_resident_count": 448,
                                "resident_count": 2110
                            },
                            "stakers": {
                                "delinquency": 0.14244396240057844,
                                "delinquent_resident_count": 197,
                                "resident_count": 1383
                            },
                            "total": {
                                "delinquency": 0.18465502433438305,
                                "delinquent_resident_count": 645,
                                "resident_count": 3493
                            }
                        }
                    },
                    {
                        "B+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "B-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.265,
                                "delinquent_resident_count": 212,
                                "resident_count": 800
                            },
                            "stakers": {
                                "delinquency": 0.2190082644628099,
                                "delinquent_resident_count": 106,
                                "resident_count": 484
                            },
                            "total": {
                                "delinquency": 0.24766355140186916,
                                "delinquent_resident_count": 318,
                                "resident_count": 1284
                            }
                        }
                    },
                    {
                        "C+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "C-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "D": {
                            "non_stakers": {
                                "delinquency": 0.2911392405063291,
                                "delinquent_resident_count": 69,
                                "resident_count": 237
                            },
                            "stakers": {
                                "delinquency": 0.21428571428571427,
                                "delinquent_resident_count": 42,
                                "resident_count": 196
                            },
                            "total": {
                                "delinquency": 0.25635103926096997,
                                "delinquent_resident_count": 111,
                                "resident_count": 433
                            }
                        }
                    }
                ]
            },
            {
                "month": "12-22",
                "network_wide": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.17988165680473372,
                                "delinquent_resident_count": 456,
                                "resident_count": 2535
                            },
                            "stakers": {
                                "delinquency": 0.1379703534777651,
                                "delinquent_resident_count": 242,
                                "resident_count": 1754
                            },
                            "total": {
                                "delinquency": 0.1627418978782933,
                                "delinquent_resident_count": 698,
                                "resident_count": 4289
                            }
                        }
                    },
                    {
                        "A+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "A-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.2123222748815166,
                                "delinquent_resident_count": 448,
                                "resident_count": 2110
                            },
                            "stakers": {
                                "delinquency": 0.146059291395517,
                                "delinquent_resident_count": 202,
                                "resident_count": 1383
                            },
                            "total": {
                                "delinquency": 0.18608645863154882,
                                "delinquent_resident_count": 650,
                                "resident_count": 3493
                            }
                        }
                    },
                    {
                        "B+": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "total": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            }
                        }
                    },
                    {
                        "B-": {
                            "non_stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
                            },
                            "stakers": {
                                "delinquency": 0,
                                "delinquent_resident_count": 0,
                                "resident_count": 0
{
    "data": {
        "months": [
            {
                "month": "09-22",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.134,
                                "delinquent_resident_count": 101,
                                "resident_count": 756
                            },
                            "stakers": {
                                "delinquency": 0.112,
                                "delinquent_resident_count": 63,
                                "resident_count": 564
                            },
                            "total": {
                                "delinquency": 0.124,
                                "delinquent_resident_count": 164,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.199,
                                "delinquent_resident_count": 404,
                                "resident_count": 2028
                            },
                            "stakers": {
                                "delinquency": 0.132,
                                "delinquent_resident_count": 176,
                                "resident_count": 1334
                            },
                            "total": {
                                "delinquency": 0.173,
                                "delinquent_resident_count": 577,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.261,
                                "delinquent_resident_count": 202,
                                "resident_count": 775
                            },
                            "stakers": {
                                "delinquency": 0.185,
                                "delinquent_resident_count": 94,
                                "resident_count": 509
                            },
                            "total": {
                                "delinquency": 0.231,
                                "delinquent_resident_count": 296,
                                "resident_count": 1284
                            }
                        }
                    },
                    {
                        "D": {
                            "non_stakers": {},
                            "stakers": {},
                            "total": {}
                        }
                    }
                ]
            },
            {
                "month": "10-22",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.136,
                                "delinquent_resident_count": 103,
                                "resident_count": 758
                            },
                            "stakers": {
                                "delinquency": 0.11,
                                "delinquent_resident_count": 62,
                                "resident_count": 562
                            },
                            "total": {
                                "delinquency": 0.125,
                                "delinquent_resident_count": 164,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.205,
                                "delinquent_resident_count": 408,
                                "resident_count": 1992
                            },
                            "stakers": {
                                "delinquency": 0.132,
                                "delinquent_resident_count": 176,
                                "resident_count": 1334
                            },
                            "total": {
                                "delinquency": 0.176,
                                "delinquent_resident_count": 584,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.269,
                                "delinquent_resident_count": 206,
                                "resident_count": 765
                            },
                            "stakers": {
                                "delinquency": 0.185,
                                "delinquent_resident_count": 96,
                                "resident_count": 519
                            },
                            "total": {
                                "delinquency": 0.235,
                                "delinquent_resident_count": 302,
                                "resident_count": 1284
                            }
                        }
                    },
                    {
                        "D": {
                            "non_stakers": {},
                            "stakers": {},
                            "total": {}
                        }
                    }
                ]
            },
            {
                "month": "11-22",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.139,
                                "delinquent_resident_count": 105,
                                "resident_count": 756
                            },
                            "stakers": {
                                "delinquency": 0.121,
                                "delinquent_resident_count": 68,
                                "resident_count": 564
                            },
                            "total": {
                                "delinquency": 0.131,
                                "delinquent_resident_count": 173,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.209,
                                "delinquent_resident_count": 415,
                                "resident_count": 1981
                            },
                            "stakers": {
                                "delinquency": 0.129,
                                "delinquent_resident_count": 173,
                                "resident_count": 1345
                            },
                            "total": {
                                "delinquency": 0.177,
                                "delinquent_resident_count": 588,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.278,
                                "delinquent_resident_count": 212,
                                "resident_count": 762
                            },
                            "stakers": {
                                "delinquency": 0.203,
                                "delinquent_resident_count": 106,
                                "resident_count": 522
                            },
                            "total": {
                                "delinquency": 0.248,
                                "delinquent_resident_count": 318,
                                "resident_count": 1284
                            }
                        }
                    },
                    {
                        "D": {
                            "non_stakers": {},
                            "stakers": {},
                            "total": {}
                        }
                    }
                ]
            },
            {
                "month": "12-22",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.144,
                                "delinquent_resident_count": 109,
                                "resident_count": 759
                            },
                            "stakers": {
                                "delinquency": 0.114,
                                "delinquent_resident_count": 64,
                                "resident_count": 561
                            },
                            "total": {
                                "delinquency": 0.131,
                                "delinquent_resident_count": 173,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.21,
                                "delinquent_resident_count": 413,
                                "resident_count": 1965
                            },
                            "stakers": {
                                "delinquency": 0.129,
                                "delinquent_resident_count": 176,
                                "resident_count": 1361
                            },
                            "total": {
                                "delinquency": 0.177,
                                "delinquent_resident_count": 589,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.249,
                                "delinquent_resident_count": 214,
                                "resident_count": 764
                            },
                            "stakers": {
                                "delinquency": 0.203,
                                "delinquent_resident_count": 106,
                                "resident_count": 523
                            },
                            "total": {
                                "delinquency": 0.249,
                                "delinquent_resident_count": 320,
                                "resident_count": 1284
                            }
                        }
                    },
                    {
                        "D": {
                            "non_stakers": {},
                            "stakers": {},
                            "total": {}
                        }
                    }
                ]
            },
            {
                "month": "01-23",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.142,
                                "delinquent_resident_count": 107,
                                "resident_count": 756
                            },
                            "stakers": {
                                "delinquency": 0.115,
                                "delinquent_resident_count": 65,
                                "resident_count": 564
                            },
                            "total": {
                                "delinquency": 0.13,
                                "delinquent_resident_count": 172,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.216,
                                "delinquent_resident_count": 422,
                                "resident_count": 1950
                            },
                            "stakers": {
                                "delinquency": 0.132,
                                "delinquent_resident_count": 181,
                                "resident_count": 1376
                            },
                            "total": {
                                "delinquency": 0.181,
                                "delinquent_resident_count": 603,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.288,
                                "delinquent_resident_count": 219,
                                "resident_count": 761
                            },
                            "stakers": {
                                "delinquency": 0.203,
                                "delinquent_resident_count": 106,
                                "resident_count": 512
                            },
                            "total": {
                                "delinquency": 0.254,
                                "delinquent_resident_count": 326,
                                "resident_count": 1284
                            }
                        }
                    },
                    {
                        "D": {
                            "non_stakers": {},
                            "stakers": {},
                            "total": {}
                        }
                    }
                ]
            },
            {
                "month": "02-23",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.133,
                                "delinquent_resident_count": 101,
                                "resident_count": 759
                            },
                            "stakers": {
                                "delinquency": 0.112,
                                "delinquent_resident_count": 63,
                                "resident_count": 561
                            },
                            "total": {
                                "delinquency": 0.124,
                                "delinquent_resident_count": 164,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.217,
                                "delinquent_resident_count": 425,
                                "resident_count": 1956
                            },
                            "stakers": {
                                "delinquency": 0.134,
                                "delinquent_resident_count": 1370,
                                "resident_count": 1463
                            },
                            "total": {
                                "delinquency": 0.183,
                                "delinquent_resident_count": 609,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.288,
                                "delinquent_resident_count": 222,
                                "resident_count": 772
                            },
                            "stakers": {
                                "delinquency": 0.203,
                                "delinquent_resident_count": 104,
                                "resident_count": 512
                            },
                            "total": {
                                "delinquency": 0.254,
                                "delinquent_resident_count": 326,
                                "resident_count": 1284
                            }
                        }
                    },
                    {
                        "D": {
                            "non_stakers": {},
                            "stakers": {},
                            "total": {}
                        }
                    }
                ]
            }
        ]
    },
    "resource_type": "rental_community",
    "status_code": 200,
    "success": true
}To delete all of the dictionaries in the "account_level" list that only have empty dictionary values for all of their keys except for the "level" key, you can use the following code:

```python
for month in data["months"]:
    for account_level in month["account_level"]:
        for level, stats in account_level.items():
            if all(not bool(v) for v in stats.values()):
                month["account_level"].remove(account_level)
                break
```

This code iterates over each month in the "months" list and then over each account level dictionary in the "account_level" list. It checks if all the values of the "stats" dictionary (except for the "level" key) are empty dictionaries. If they are, it removes the account level dictionary from the "account_level" list.{
    "data": {
        "months": [
            {
                "month": "09-22",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.134,
                                "delinquent_resident_count": 101,
                                "resident_count": 756
                            },
                            "stakers": {
                                "delinquency": 0.112,
                                "delinquent_resident_count": 63,
                                "resident_count": 564
                            },
                            "total": {
                                "delinquency": 0.124,
                                "delinquent_resident_count": 164,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.199,
                                "delinquent_resident_count": 404,
                                "resident_count": 2028
                            },
                            "stakers": {
                                "delinquency": 0.132,
                                "delinquent_resident_count": 176,
                                "resident_count": 1334
                            },
                            "total": {
                                "delinquency": 0.173,
                                "delinquent_resident_count": 577,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.261,
                                "delinquent_resident_count": 202,
                                "resident_count": 775
                            },
                            "stakers": {
                                "delinquency": 0.185,
                                "delinquent_resident_count": 94,
                                "resident_count": 509
                            },
                            "total": {
                                "delinquency": 0.231,
                                "delinquent_resident_count": 296,
                                "resident_count": 1284
                            }
                        }
                    }
                ]
            },
            {
                "month": "10-22",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.136,
                                "delinquent_resident_count": 103,
                                "resident_count": 758
                            },
                            "stakers": {
                                "delinquency": 0.11,
                                "delinquent_resident_count": 62,
                                "resident_count": 562
                            },
                            "total": {
                                "delinquency": 0.125,
                                "delinquent_resident_count": 164,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.205,
                                "delinquent_resident_count": 408,
                                "resident_count": 1992
                            },
                            "stakers": {
                                "delinquency": 0.132,
                                "delinquent_resident_count": 176,
                                "resident_count": 1334
                            },
                            "total": {
                                "delinquency": 0.176,
                                "delinquent_resident_count": 584,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.269,
                                "delinquent_resident_count": 206,
                                "resident_count": 765
                            },
                            "stakers": {
                                "delinquency": 0.185,
                                "delinquent_resident_count": 96,
                                "resident_count": 519
                            },
                            "total": {
                                "delinquency": 0.235,
                                "delinquent_resident_count": 302,
                                "resident_count": 1284
                            }
                        }
                    }
                ]
            },
            {
                "month": "11-22",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.139,
                                "delinquent_resident_count": 105,
                                "resident_count": 756
                            },
                            "stakers": {
                                "delinquency": 0.121,
                                "delinquent_resident_count": 68,
                                "resident_count": 564
                            },
                            "total": {
                                "delinquency": 0.131,
                                "delinquent_resident_count": 173,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.209,
                                "delinquent_resident_count": 415,
                                "resident_count": 1981
                            },
                            "stakers": {
                                "delinquency": 0.129,
                                "delinquent_resident_count": 173,
                                "resident_count": 1345
                            },
                            "total": {
                                "delinquency": 0.177,
                                "delinquent_resident_count": 588,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.278,
                                "delinquent_resident_count": 212,
                                "resident_count": 762
                            },
                            "stakers": {
                                "delinquency": 0.203,
                                "delinquent_resident_count": 106,
                                "resident_count": 522
                            },
                            "total": {
                                "delinquency": 0.248,
                                "delinquent_resident_count": 318,
                                "resident_count": 1284
                            }
                        }
                    }
                ]
            },
            {
                "month": "12-22",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.144,
                                "delinquent_resident_count": 109,
                                "resident_count": 759
                            },
                            "stakers": {
                                "delinquency": 0.114,
                                "delinquent_resident_count": 64,
                                "resident_count": 561
                            },
                            "total": {
                                "delinquency": 0.131,
                                "delinquent_resident_count": 173,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.21,
                                "delinquent_resident_count": 413,
                                "resident_count": 1965
                            },
                            "stakers": {
                                "delinquency": 0.129,
                                "delinquent_resident_count": 176,
                                "resident_count": 1361
                            },
                            "total": {
                                "delinquency": 0.177,
                                "delinquent_resident_count": 589,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.249,
                                "delinquent_resident_count": 214,
                                "resident_count": 764
                            },
                            "stakers": {
                                "delinquency": 0.203,
                                "delinquent_resident_count": 106,
                                "resident_count": 523
                            },
                            "total": {
                                "delinquency": 0.249,
                                "delinquent_resident_count": 320,
                                "resident_count": 1284
                            }
                        }
                    }
                ]
            },
            {
                "month": "01-23",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.142,
                                "delinquent_resident_count": 107,
                                "resident_count": 756
                            },
                            "stakers": {
                                "delinquency": 0.115,
                                "delinquent_resident_count": 65,
                                "resident_count": 564
                            },
                            "total": {
                                "delinquency": 0.13,
                                "delinquent_resident_count": 172,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.216,
                                "delinquent_resident_count": 422,
                                "resident_count": 1950
                            },
                            "stakers": {
                                "delinquency": 0.132,
                                "delinquent_resident_count": 181,
                                "resident_count": 1376
                            },
                            "total": {
                                "delinquency": 0.181,
                                "delinquent_resident_count": 603,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.288,
                                "delinquent_resident_count": 219,
                                "resident_count": 761
                            },
                            "stakers": {
                                "delinquency": 0.203,
                                "delinquent_resident_count": 106,
                                "resident_count": 512
                            },
                            "total": {
                                "delinquency": 0.254,
                                "delinquent_resident_count": 326,
                                "resident_count": 1284
                            }
                        }
                    }
                ]
            },
            {
                "month": "02-23",
                "account_level": [
                    {
                        "A": {
                            "non_stakers": {
                                "delinquency": 0.133,
                                "delinquent_resident_count": 101,
                                "resident_count": 759
                            },
                            "stakers": {
                                "delinquency": 0.112,
                                "delinquent_resident_count": 63,
                                "resident_count": 561
                            },
                            "total": {
                                "delinquency": 0.124,
                                "delinquent_resident_count": 164,
                                "resident_count": 1320
                            }
                        }
                    },
                    {
                        "B": {
                            "non_stakers": {
                                "delinquency": 0.217,
                                "delinquent_resident_count": 425,
                                "resident_count": 1956
                            },
                            "stakers": {
                                "delinquency": 0.134,
                                "delinquent_resident_count": 1370,
                                "resident_count": 1463
                            },
                            "total": {
                                "delinquency": 0.183,
                                "delinquent_resident_count": 609,
                                "resident_count": 3326
                            }
                        }
                    },
                    {
                        "C": {
                            "non_stakers": {
                                "delinquency": 0.288,
                                "delinquent_resident_count": 222,
                                "resident_count": 772
                            },
                            "stakers": {
                                "delinquency": 0.203,
                                "delinquent_resident_count": 104,
                                "resident_count": 512
                            },
                            "total": {
                                "delinquency": 0.254,
                                "delinquent_resident_count": 326,
                                "resident_count": 1284
                            }
                        }
                    }
                ]
            }
        ]
    },
    "resource_type": "rental_community",
    "status_code": 200,
    "success": true
}The code can be refactored to use the "stakers" attribute of the DelinquencyMockCommunity to determine the number of residents in the mock community that have is_member = True during the effective date for that month. Here is the refactored code:

```python
import csv
import string
from collections import defaultdict
from datetime import datetime, timedelta
from random import randint, random, choice
from typing import Optional

from dateutil.rrule import MONTHLY, rrule

from pgModels2 import BuildingC
from stakeView.Action import Action
from stakeView.Campaign import Campaign
from stakeView.Community import Community
from stakeView.Lease import Lease
from stakeView.Ledger import Ledger
from stakeView.Offer import Offer
from stakeView.PropertyUnit import PropertyUnit
from linker import pg_session
from stakeView.Resident import Resident
from stakeView.StakeViewAccount import StakeViewAccount
from stakeView.enums import StakeViewResidentTypes, StakeViewResidentStatuses, StakeViewLeaseStatuses, StakeViewUnitStatuses
from stakeView.mock_data.Campaign import add_mocks_to_stakeview_for_testing_account
from unittest.mock import Mock


def populate_community_with_residents(community, total_residents, total_stakers):
    for _ in range(int(total_residents)):
        resident = create_mock_resident(
            move_in_date=community.first_day_of_data + timedelta(days=10),
            move_out_date=community.last_day_of_data - timedelta(days=10)
        )
        community.residents.append(resident)
        if _ < int(total_stakers):
            resident.is_member = True
        else:
            resident.is_member = False

def create_verification_communities():
    # Read the csv file and store the data
    data = []
    with open('/Users/connor/Desktop/git/stakeView/mock_data/network_wide_test_data_delinquency_final.csv', 'r') as file:
        reader = csv.reader(file)
        for row in reader:
            data.append(row)

    # Create mock instances based on the data
    community_instances = []
    is_first_row = True
    for row in data:
        if is_first_row:
            is_first_row = False
            continue
        community = DelinquencyMockCommunity(row[0], row[1], row[2], row[3], row[4], row[5], row[6], row[7], row[8], row[9], row[10],
                                               row[11], row[12],
                                               row[13], row[14])
        community_instances.append(community)

    return community_instances


class DelinquencyMockCommunity():
    def __init__(self, communityName, month, year, pastDueBalance, rentLateDate, comm_class, stakers, delinquentStakers,
                 percentDelinquentStakers, nonStakers, delinquentNonStakers, percentDelinquentNonStakers, totalResidents,
                 totalDelinquentResidents, totalDelinquency):
        self.communityName = communityName
        self.month = float(month) if month != "" else month
        self.year = float(year) if year != "" else year
        self.rentLateDate = float(rentLateDate) if rentLateDate != "" else rentLateDate
        self.stakers = float(stakers) if stakers != "" else stakers
        self.delinquentStakers = float(delinquentStakers) if delinquentStakers != "" else delinquentStakers
        self.percentDelinquentStakers = float(percentDelinquentStakers) if percentDelinquentStakers != "" else percentDelinquentStakers
        self.nonStakers = float(nonStakers) if nonStakers != "" else nonStakers
        self.delinquentNonStakers = float(delinquentNonStakers) if delinquentNonStakers != "" else delinquentNonStakers
        self.percentDelinquentNonStakers = float(percentDelinquentNonStakers) if percentDelinquentNonStakers != "" else percentDelinquentNonStakers
        self.totalResidents = float(totalResidents) if totalResidents != "" else totalResidents
        self.totalDelinquentResidents = float(totalDelinquentResidents) if totalDelinquentResidents != "" else totalDelinquentResidents
        self.totalDelinquency = float(totalDelinquency) if totalDelinquency != "" else totalDelinquency
        self.comm_class = comm_class
        self.pastDueBalance = float(pastDueBalance) if pastDueBalance != "" else pastDueBalance


def initialize_mock_communities(num_communities, first_datetime, last_datetime) -> list[Community]:
    verification_comms = create_verification_communities()
    communities = []
    unique_comms = get_unique_delinquency_comms(verification_comms)

    for i in range(num_communities):
        verification_comms_each_month = []
        # Find verification comms for this community
        comm_name = unique_comms[i]
        for comm in verification_comms:
            if comm.communityName == comm_name:
                verification_comms_each_month.append(comm)
        community = create_mock_community(sfid=f"mock_community_sfid_{i}", external_id=f"community_external_id_{i}",
                                          name=f"Mock Community {i}", first_datetime=first_datetime, last_datetime=last_datetime,
                                          verification_comms_each_month=verification_comms_each_month)
        communities.append(community)
    return communities


def create_mock_community(sfid="mock_community_sfid", external_id="community_external_id", name="Mock Community", first_datetime=None,
                          last_datetime=None, verification_comms_each_month=None) -> Community:
    # Create mock data for Community attributes
    sfid = sfid
    external_id = external_id
    building = create_mock_building(name=verification_comms_each_month[0].communityName, sfid=sfid, account_sfid="mock_account_sfid")

    campaigns = []
    campaigns = add_mocks_to_stakeview_for_testing_account(campaigns=campaigns)

    pms = "Entrata"

    # Create mock Community instance
    community = Community(sfid=sfid, external_id=external_id, name=verification_comms_each_month[0].communityName,
                          sf_account_name="Mock Account", building=building,
                          campaigns=campaigns, rent_late_date=verification_comms_each_month[0].rentLateDate,
                          past_due_balance_threshold=verification_comms_each_month[0].pastDueBalance,
                          pms=pms,
                          building_class=verification_comms_each_month[0].comm_class,
                          previous_concession_weeks_of_free_rent=8.0)

    community.first_day_of_data = first_datetime
    community.last_day_of_data = last_datetime
    community.set_rent_late_datetimes()

    total_residents = verification_comms_each_month[0].totalResidents
    total_stakers = verification_comms_each_month[0].stakers

    # Create mock data for Resident, Lease, Ledger, and PropertyUnit
    populate_community_with_residents(community=community, total_residents=total_residents, total_stakers=total_stakers)

    units = generate_leases_for_residents(community=community, first_day_of_data=first_datetime, last_day_of_data=last_datetime)
    community.units = units

    total_delinquent_residents = defaultdict(int)
    total_delinquent_stakers = defaultdict(int)
    total_delinquent_non_stakers = defaultdict(int)

    num_stakers = 0
    for resident in community.residents:
        if num_stakers < verification_comms_each_month[0].stakers:
            resident.is_member = True
            num_stakers += 1
        delinquent_months = []
        ledger = resident.ledger
        # from community.first_day_of_data to community.last_day_of_data create a tuple of (year, month) for each month the range spans
        i = 0
        for year in range(community.first_day_of_data.year, community.last_day_of_data.year + 1):
            if year == community.first_day_of_data.year:
                start_month = community.first_day_of_data.month
            else:
                start_month = 1
            if year == community.last_day_of_data.year:
                end_month = community.last_day_of_data.month
            else:
                end_month = 12

            for month in range(start_month, end_month + 1):
                verification_community_month = verification_comms_each_month[i]
                num_stakers = verification_community_month.stakers
                delinquent_stakers_left = verification_community_month.delinquentStakers
                is_delinquent = False
                if verification_community_month.delinquentStakers > 0 and resident.is_member:
                    is_delinquent = True
                    verification_community_month.delinquentStakers = verification_community_month.delinquentStakers - 1
                    total_delinquent_residents[str(year) + "-" + str(month)] += 1
                    total_delinquent_stakers[str(year) + "-" + str(month)] += 1
                if verification_community_month.delinquentNonStakers > 0 and not resident.is_member:
                    is_delinquent = True
                    verification_community_month.delinquentNonStakers = verification_community_month.delinquentNonStakers - 1
                    total_delinquent_residents[str(year) + "-" + str(month)] += 1
                    total_delinquent_non_stakers[str(year) + "-" + str(month)] += 1
                delinquent_months = update_mock_ledger_with_snapshots(community=community,
                                                                      delinquent_months=delinquent_months,
                                                                      month=month,
                                                                      year=year,
                                                                      ledger=resident.ledger,
                                                                      balances=[0, -100, -5, -10, -60],
                                                                      is_delinquent=is_delinquent,
                                                                      number_of_snapshots=5)
                i += 1

    community.run_post_build_processing()

    StakeViewAccount.print_debug_logs(community)

    print(f"\n\nCommunity: {community.name} Delinquency Stats")

    print(f"\nTotal delinquent residents")
    print("----------------------------")
    for month, count in total_delinquent_residents.items():
        print(f"      {month}: {count}")

    print(f"\nDelinquency rate by month")
    print("----------------------------")
    for month, count in total_delinquent_residents.items():
        print(f"      {month}: {count / len(community.residents)}")

    print(f"\nTotal delinquent stakers")
    print("----------------------------")
    for month, count in total_delinquent_stakers.items():
        print(f"      {month}: {count}")

    print(f"\nStaker delinquency rate by month")
    print("----------------------------")
    for month, count in total_delinquent_stakers.items():
        print(f"      {month}: {count / len([resident for resident in community.residents if resident.is_member])}")

    print(f"\nTotal stakers")
    print("----------------------------")
    print(f"      Stakers count = {len([resident for resident in community.residents if resident.is_member])}")

    print(f"\nTotal delinquent non-stakers")
    print("----------------------------")
    for month, count in total_delinquent_non_stakers.items():
        print(f"      {month}: {count}")

    print(f"\nNon-staker delinquency rate by month")
    print("----------------------------")
    for month, count in total_delinquent_non_stakers.items():
        print(f"      {month}: {count / len([resident for resident in community.residents if not resident.is_member])}")

    print(f"\nTotal non-stakers")
    print("----------------------------")
    print(f"      Non-stakers count = {len([resident for resident in community.residents if not resident.is_member])}")

    return community


def generate_random_string(length):
    letters = string.ascii_lowercase
    return ''.join(choice(letters) for i in range(length))


def update_mock_ledger_with_snapshots(community, delinquent_months, ledger, balances=[150, 0, 75],
                                      total_scheduled_charges=0, month=1,
                                      year=2020,
                                      number_of_snapshots=3,
                                      is_delinquent=False,
                                      past_due_balance_threshold=150):
    first_day_of_month = datetime(year, month, 1)
    last_day_of_month = datetime(year, month, 28)
    rent_late_datetimes = community.get_rent_late_datetimes(range_start=first_day_of_month, range_end=last_day_of_month)
    transaction_date = rent_late_datetimes[0] - timedelta(days=1)
    effective_date = transaction_date
    for i in range(0, number_of_snapshots):
        balance = choice(balances)
        if i == number_of_snapshots - 1:
            if is_delinquent:
                balance = past_due_balance_threshold + 1
                transaction_date = effective_date
                if balance > community.past_due_balance_threshold:
                    delinquent_months.append((year, month))
        else:
            transaction_date = effective_date + timedelta(days=randint(1, 10)) + timedelta(days=2)

        temp_ledger = Ledger(balance=balance, total_scheduled_charges=total_scheduled_charges, transaction_date=transaction_date)
        ledger.update_if_different(other_obj=temp_ledger, transaction_date=transaction_date)
    ledger.sort_snapshots()
    return delinquent_months


def create_mock_property_unit(unitId: Optional[str] = None, unitNumber: Optional[str] = None,
                              unitTypeName: Optional[str] = None, baseRent: Optional[float] = None,
                              unitStatus: Optional[StakeViewUnitStatuses] = None,
                              squareFootage: Optional[float] = None) -> PropertyUnit:
    # Set default values for each member variable
    unitId = generate_random_string(10)
    unitNumber = generate_random_string(6)
    unitTypeName = generate_random_string(10)
    baseRent = baseRent or 1000.0
    unitStatus = unitStatus or StakeViewUnitStatuses.OCCUPIED
    squareFootage = squareFootage or 1500.0

    # Create and return the mock PropertyUnit instance
    return PropertyUnit(unitId, unitNumber, unitTypeName, baseRent, unitStatus, squareFootage)


def random_day(month):
    """
    Generates a random day in the given month.
    :param month: An integer representing the month (1-12).
    :return: A random day of the month.
    """
    if month in [4, 6, 9, 11]:
        return randint(1, 30)
    elif month == 2:
        return randint(1, 28)  # This does not account for leap years
    else:
        return randint(1, 31)


def get_first_days(start_date, end_date):
    # Adjust the start date to the first day of the month
    start_date = start_date.replace(day=1)

    # Generate a list of the first day of the month for each month in the range
    dates = [dt for dt in rrule(MONTHLY, dtstart=start_date, until=end_date)]

    return dates


def generate_leases_for_residents(community: Community, first_day_of_data: datetime, last_day_of_data: datetime):
    months = []
    for date in get_first_days(start_date=first_day_of_data, end_date=last_day_of_data):
        months.append(date.month)

    units = []

    for resident in community.residents:
        if not resident.leases:
            resident.leases = []

        years = 1
        lease_start_dates = []
        for year in range(years):
            month = first_day_of_data.month
            day = 1  # to ensure the day exists in all months
            year = first_day_of_data.year
            lease_start_date = datetime(year, month, day)
            lease_end_date = lease_start_date + timedelta(days=365)  # lease is 1 year long
            lease_start_dates.append((lease_start_date, lease_end_date))

        property_unit = create_mock_property_unit()
        units.append(property_unit)

        previous_lease = None
        for start_date, end_date in lease_start_dates:
            lease = Lease(start_date=start_date, end_date=end_date, unit=property_unit, status=StakeViewLeaseStatuses.CURRENT,
                          transaction_date=start_date)
            resident.leases.append(lease)
            if previous_lease:
                previous_lease.status = StakeViewLeaseStatuses.COMPLETE
            previous_lease = lease

    return units


def create_mock_resident(move_in_date=datetime.now() - timedelta(days=365 * 3), move_out_date=datetime.now() + timedelta(days=2)):
    ledger = Ledger(transaction_date=move_in_date)
    external_id = generate_random_string(10)
    name = generate_random_string(10)
    email = generate_random_string(10)
    resident_type = StakeViewResidentTypes.PRIMARY
    status = StakeViewResidentStatuses.CURRENT
    phone = generate_random_string(10)
    move_in_date = move_in_date
    move_out_date = move_out_date
    transaction_date = move_in_date

    return Resident(ledger, external_id, name, email, resident_type=resident_type, status=status, phone=phone, move_in_date=move_in_date,
                    move_out_date=move_out_date, transaction_date=transaction_date)


def create_mock_building(name, sfid, account_sfid):
    mock_building = BuildingC()

    mock_building.name = name
    mock_building.address__c = "1906 N 34th St, Seattle, WA 98103, USA"
    mock_building.isdeleted = False
    mock_building.systemmodstamp = '2023-07-10 16:13:44.000000'
    mock_building.createddate = '2023-03-15 19:41:22.000000'
    mock_building.account__c = account_sfid
    mock_building.reward_percentage__c = 400
    mock_building.sfid = sfid
    mock_building.id = 389
    mock_building._hc_lastop = 'SYNCED'
    mock_building._hc_err = ''
    mock_building.setup_fee_amount__c = 995
    mock_building.setup_fee_waived__c = False
    mock_building.setup_fee_paid__c = False
    mock_building.setup_fee_incoiced__c = False
    mock_building.reports_connected__c = False
    mock_building.zip_code__c = '98103'
    mock_building.listings_image__c = 'stake.rent'
    mock_building.listings_link__c = 'https://shop.joe.coffee/explore/stores/984efb8d-7f73-4213-b19b-725fb0a1578d'
    mock_building.retired__c = False
    mock_building.ap_contact_phone__c = ''
    mock_building.ap_contact_alternate_billing_address__c = ''
    mock_building.ap_contact_name__c = ''
    mock_building.accounts_payable_contact_email__c = ''
    mock_building.total_units__c = 100
    mock_building.baseline_occupancy__c = 85
    mock_building.baseline_retention__c = 0
    mock_building.yardi_property_id__c = '1000000'
    mock_building.loyalty_cloud_config__c = 'MVP'
    mock_building.eligible_for_credit_reporting__c = False
    mock_building.everyday_cashback_action_lite_1_door__c = False
    mock_building.year_built__c = '2'
    mock_building.target_renewal_trade_out_rate__c = '10'
    mock_building.target_new_lease_trade_out_rate__c = '0.010001000100010001'
    mock_building.baseline_bad_debt_rate__c = '1'
    mock_building.baseline_new_lease_tradeout_rate__c = ''
    mock_building.estimated_monthly_rent__c = 1800
    mock_building.baseline_renewal_trade_out_rate__c = 0
    mock_building.property_status__c = ''
    mock_building.potential_revenue__c = ''
    mock_building.opportunity_level__c = ''
    mock_building.pm_software_provider__c = 'Entrata'
    mock_building.previous_concessions__c = '6.0 weeks free'
    mock_building.reviews_visible_to_client__c = False
    mock_building.rental_community_roundup_emails__c = True
    mock_building.admins_should_receive_roundup_emails__c = False
    mock_building.realpage_site_id__c = ''
    mock_building.class__c = 'A'
    mock_building.previous_concession_amount__c = '100.00'
    mock_building.average_credit_score__c = None

    return mock_building


def get_unique_delinquency_comms(comms):
    unique_com_names = []
    for com in comms:
        if com.communityName not in unique_com_names:
            unique_com_names.append(com.communityName)
    return unique_com_names

```

In this refactored code, the `total_residents` and `total_stakers` are obtained from the `verification_comms_each_month` list for each community. The `total_residents` is used to populate the community with residents, and the `total_stakers` is used to determine the number of stakers in the community.The refactored code for `cache_stakeview_for_supported_accounts` following the same pattern as `cache_pg_residents_with_snapshots` is as follows:

```python
import json
import sys
from collections import defaultdict

import path
directory = path.Path(__file__).abspath()
sys.path.append(directory.parent.parent)
from pgModels2 import Account
from stakeView.StakeView import StakeView
from stakeView.enums import StakeViewSupportedIntegrations
from adhoc_scripts.dailyDataCheck import pg_session

from job import Job, MemoryUsage

class CacheStakeviewForSupportedAccounts(Job):
    def __init__(self, is_isolated=True, is_test=False, is_local=False):
        super().__init__(is_isolated=is_isolated, cache_key="stakeview:")
        self.is_test = is_test
        self.is_local = is_local

    def run(self):
        self.start_run()

        sys.setrecursionlimit(10000)

        DEV_MODE = False
        VERBOSE = False

        account_names_indexed_by_sfid = dict()
        community_to_build = None

        if DEV_MODE:
            print("DEV MODE ACTIVATED... Caching a stakeview for a single account. Boo!")
            account_names_indexed_by_sfid['0014S000001xoueQAA'] = 'Testing Account'

            account_names_indexed_by_sfid['0014S000004YidYQAS'] = '29TH Street Capital LLC'
            # community_to_build = 'a054S000000BjfxQAC'

            # account_names_indexed_by_sfid['0014S000004bX37QAE'] = 'Blue Stone Premier'
            # account_names_indexed_by_sfid['0014S000004bx66QAA'] = 'Revona Properties'

            # account_names_indexed_by_sfid['0014S000009NACRQA4'] = 'Think Multifamily'
            # community_to_build = 'a054S000000CNMjQAO'

        else:
            print("Caching a stakeview for every account with a supported pms provider for a community. Hooray!")
            # logic to tell which accounts to build and cache stakeview for
            supported_integrations = [integration.value for integration in StakeViewSupportedIntegrations]
            all_supported_accounts = {'account_sfids': [], 'account_names': []}
            for account in pg_session.query(Account).filter(Account.pm_software_providers__c.in_(supported_integrations)).all():
                account_names_indexed_by_sfid[account.sfid] = account.name
                print(f"Added account {account.name} ({account.sfid}) to the list of accounts to build stakeview for")
                all_supported_accounts['account_sfids'].append(account.sfid)
                all_supported_accounts['account_names'].append(account.name)
            # print(json.dumps(all_supported_accounts, indent=4, sort_keys=True))
        stakeview = StakeView(account_names_indexed_by_sfid=account_names_indexed_by_sfid, debug=DEV_MODE)

        errors = []
        if community_to_build and DEV_MODE:
            print(f"Building stakeview for community {community_to_build}")
            for sv_account in stakeview.sv_accounts:
                error = sv_account.build(verbose=VERBOSE, community_sfid=community_to_build)
                if error:
                    errors.append((community_to_build, error))
        else:
            communities_by_account = defaultdict(list)
            for sv_account in stakeview.sv_accounts:
                communities_for_account = []
                for community in sv_account.communities:
                    communities_for_account.append(community)
                    print(f"Building stakeview for community {community.name} ({community.sfid}) for account {sv_account.account_name} ({sv_account.account_sfid})")
                    error = sv_account.build(verbose=VERBOSE, community_sfid=community.sfid)
                    if error:
                        errors.append((community.name, error))
                communities_by_account[sv_account.account_sfid] = communities_for_account

        for acc in stakeview.sv_accounts:
            print(f"===Account: {acc.account_name} ({acc.account_sfid})===")
            for c in acc.communities:
                print(f"    ==Community: {c.name} ({c.sfid})==")
                print(f"        first day of data: {c.first_day_of_data}")
                print(f"        last day of data:  {c.last_day_of_data}")
                print(f"        previous concessions: {c.previous_concession_weeks_of_free_rent}")

        if errors:
            print(f"Errors occurred while building stakeview for the following communities:")
            for error in errors:
                print(f"    {error[0]}: {error[1]}")

        else:
            print(f"No errors occurred while building stakeview for any communities")
            print(f"Stakeview cache built successfully for {len(stakeview.sv_accounts)} accounts")
            list_of_comms = [acc.communities for acc in stakeview.sv_accounts]
            all_comms = [comm for comms in list_of_comms for comm in comms]
            print(f"Stakeview cache built successfully for {len(all_comms)} communities")
            print("W")

        self.end_run()

if __name__ == '__main__':
    job = CacheStakeviewForSupportedAccounts(is_isolated=True, is_test=False, is_local=False)
    job.run()
    job.print_errors()
```

The superclass `Job` is defined as follows:

```python
import pickle
from abc import ABC, abstractmethod
from datetime import datetime

import os
import psutil

from db import redis_client
import redis


class MemoryUsage:
    """
    Class for tracking the memory usage of the current process.
    """

    def __init__(self):
        """
        Constructor of the MemoryUsage class.
        Initializes the process to the current process.
        """
        self.process = psutil.Process(os.getpid())
        self.memory_usage_checks = []

    def print_memory_usage(self, memory_usage_amount=None):
        """
        Prints the memory usage of the current process in KB, MB, and GB.
        """

        memory_usage = self.process.memory_info().rss
        # byte to KB, MB, GB
        KB = 1024
        MB = KB * KB
        GB = MB * KB

        memory_output = ""

        if memory_usage_amount is not None:
            memory_usage = memory_usage_amount

        # formatting
        if memory_usage >= MB and memory_usage_amount is None:
            memory_output = f"Memory usage: {memory_usage / MB:.2f} MB"
        elif memory_usage_amount is None:
            memory_output = f"Memory usage: 0 MB"
        else:
            memory_output = f"Memory usage: {memory_usage:.2f} MB"

        print("\n")
        print(memory_output)
        print("\n")

        self.memory_usage_checks.append(memory_output)

    def __str__(self):
        """
         Returns the memory usage of the current process as a string.
         """
        return str(self.process.memory_info().rss)


class Job(ABC):
    """
    Abstract base class for a job.
    """

    def __init__(self, is_isolated=True, cache_key=None):
        """
        Constructor of the Job class.
        Initializes the start and end times, epoch times, errors,
        cache key, and flags for whether the job is isolated.
        """
        self.start_time = None
        self.end_time = None
        self.epoch_time = []
        self.errors = []
        self.process_counter = 0
        self.memory_usage = MemoryUsage()

        self.cache_key = cache_key

        self.is_isolated = is_isolated

    def set_redis_cache(self, value, key):
        """
        Sets the redis cache with the value for the key. The value does not have to be pickled already.
        """
        encoded_dict = pickle.dumps(value)
        print(f"Setting redis key: {key}...")
        try:
            redis_client.set(key, encoded_dict)
            print(f"Set redis key: {key} successfully!")
        except Exception as e:
            print(e)
            print("Trying again...")
            redis_url = os.environ.get("REDIS_URL")
            redis_client2 = redis.from_url(redis_url)
            redis_client2.set(key, encoded_dict)
            print(f"Set redis key: {key} successfully!")

    def get_redis_cache_value(self, key):
        """
        Gets the redis cache value for the key.
        """
        print(f"Getting redis key: {self.cache_key + key}...")
        try:
            value = redis_client.get(self.cache_key + key)
            print(f"Got redis key: {self.cache_key + key} successfully!")
            return value
        except Exception as e:
            print(e)
            print("Trying again...")
            redis_url = os.environ.get("REDIS_URL")
            redis_client2 = redis.from_url(redis_url)
            value = redis_client2.get(self.cache_key + key)
            print(f"Got redis key: {self.cache_key + key} successfully!")
            return value

    def add_process_counter(self):
        """
        Increments the process counter by 1.
        """
        self.process_counter += 1

    @abstractmethod
    def run(self):
        """
        Abstract method for running the job. This method should be overridden by the child class.
        It initiates a memory usage object, prints the memory usage, and attempts to execute each job from the file paths.
        If an exception occurs during the execution of a job, the exception is added to the errors list.
        After each job, the current time is added to the epoch times list.
        """
        memory = self.memory_usage
        memory.print_memory_usage()

        self.start_time = datetime.now()
        self.add_epoch_time("Start Run")
        self.memory_usage.print_memory_usage()

    def start_run(self):
        """
        Records the start time of the run.
        """
        self.start_time = datetime.now()
        print(f"        Starting run at: {self.start_time}")
        self.add_epoch_time("Start Run")
        self.memory_usage.print_memory_usage()

    def end_run(self):
        """
        Records the end time of the run and prints the epoch times, start time, end time, and total run time.
        """
        self.end_time = datetime.now()
        previous_epoch = self.epoch_time[0]
        for epoch in self.epoch_time:
            print("\nEpoch Data Name: " + str(epoch[0]))
            print("Epoch Time: " + str(epoch[1]))
            print("Epoch Time Delta: " + str(epoch[1] - previous_epoch[1]) + "\n")
        print("\nJob started at: " + str(self.start_time))
        print("Job ended at: " + str(self.end_time))
        print("Job took: " + str(self.end_time - self.start_time) + "\n")
        self.memory_usage.print_memory_usage()

    def add_epoch_time(self, data_name):
        """
        Adds the current time and associated data name to the epoch times list.
        """
        self.epoch_time.append((data_name, datetime.now()))

    def print_errors(self):
        """
        Prints the errors that occurred during the job. If no errors occurred, it prints that no errors occurred.
        """
        if self.errors:
            print("Errors occurred during the job:")
            for error in self.errors:
                print(error)
        else:
            print("No errors occurred during the job.")

    def print_block(self, title):
        print("\n####################################################################")
        print("####################################################################")
        print("####################################################################")
        print(f"\n                        {title}                            \n")
        print("####################################################################")
        print("####################################################################")
        print("####################################################################\n")
```

Please note that the code provided is a refactoring based on the given requirement, and it may require further modifications or adjustments based on the specific implementation and requirements.Here is a function that takes all the data uploaded to a stakeview build_data table and iterates over it to determine if there are any days where the community did not get data:

```python
def check_missing_data(table_ref):
    client = bigquery.Client()
    
    # Query to count the number of rows for each transaction_date
    query = f"""
    SELECT transaction_date, COUNT(*) as row_count
    FROM `{table_ref}`
    GROUP BY transaction_date
    """
    
    # Execute the query
    query_job = client.query(query)
    results = query_job.result()
    
    # Create a dictionary to store the missing dates
    missing_dates = {}
    
    # Iterate over the query results
    for row in results:
        transaction_date = row["transaction_date"]
        row_count = row["row_count"]
        
        # If the row count is less than expected (e.g. 24 for a full day), add it to the missing dates
        if row_count < 24:
            missing_dates[transaction_date] = 24 - row_count
    
    # Print the missing dates
    if missing_dates:
        print("Missing data:")
        for date, count in missing_dates.items():
            print(f"{date}: {count} missing rows")
    else:
        print("No missing data")
```

You can call this function by providing the table reference as an argument. For example:

```python
table_ref = "project.dataset.table"
check_missing_data(table_ref)
```

Note: The function assumes that each day should have 24 rows of data. You may need to modify the code if your data has a different number of rows per day.communityName,Month,Year,pastDueBalance,rentLateDate,Class,Stakers,Delinquent Stakers,% of Delinquent Stakers,Non Stakers,Delinquent Non Stakers,% of Delinquent Non Stakers,Total Residents,Total Delinquent Residents,Total Delinquency
Gotham Apts,9,22,150,4,A,35,6,0.185,107,32,0.338,142,38,0.268
Gotham Apts,10,22,150,4,A,35,6,0.194,107,32,0.373,142,41,0.289
Gotham Apts,11,22,150,4,A,35,6,0.206,107,32,0.338,142,39,0.275
Gotham Apts,12,22,150,4,A,35,6,0.185,107,32,0.338,142,38,0.268
Gotham Apts,1,23,150,4,A,35,6,0.176,107,32,0.365,142,39,0.275
Gotham Apts,2,23,150,4,A,35,6,0.114,107,32,0.417,142,38,0.268
Starkiller Base,9,22,125,5,A,205,31,0.145,1146,216,0.189,1351,247,0.171
Starkiller Base,10,22,125,5,A,205,31,0.147,1146,216,0.192,1351,247,0.174
Starkiller Base,11,22,125,5,A,205,31,0.146,1146,216,0.211,1351,247,0.184
Starkiller Base,12,22,125,5,A,205,31,0.154,1146,216,0.207,1351,247,0.185
Starkiller Base,1,23,125,5,A,205,31,0.156,1146,216,0.207,1351,247,0.186
Starkiller Base,2,23,125,5,A,205,31,0.152,1146,216,0.211,1351,247,0.186
Krypton Complex,9,22,150,6,A,138,16,0.116,138,16,0.136,276,32,0.129
Krypton Complex,10,22,150,6,A,138,16,0.12,138,16,0.142,276,32,0.134
Krypton Complex,11,22,150,6,A,138,16,0.12,138,16,0.146,276,32,0.137
Krypton Complex,12,22,150,6,A,138,16,0.138,138,16,0.144,276,32,0.142
Krypton Complex,1,23,150,6,A,138,16,0.135,138,16,0.148,276,32,0.143
Krypton Complex,2,23,150,6,A,138,16,0.131,138,16,0.154,276,32,0.146
Our Planet,9,22,0,3,A,282,31,0.112,840,133,0.134,1122,164,0.124
Our Planet,10,22,0,3,A,282,31,0.11,840,133,0.136,1122,165,0.125
Our Planet,11,22,0,3,A,282,31,0.121,840,133,0.139,1122,173,0.131
Our Planet,12,22,0,3,A,282,31,0.113,840,133,0.144,1122,173,0.131
Our Planet,1,23,0,3,A,282,31,0.115,840,133,0.142,1122,172,0.13
Our Planet,2,23,0,3,A,282,31,0.112,840,133,0.133,1122,164,0.124
Metropolis Apts,9,22,150,4,B,42,9,0.212,100,29,0.317,142,38,0.263
Metropolis Apts,10,22,150,4,B,42,9,0.253,100,29,0.413,142,41,0.329
Metropolis Apts,11,22,150,4,B,42,9,0.282,100,29,0.402,142,41,0.341
Metropolis Apts,12,22,150,4,B,42,9,0.292,100,29,0.449,142,41,0.365
Metropolis Apts,1,23,150,4,B,42,9,0.275,100,29,0.461,142,41,0.359
Metropolis Apts,2,23,150,4,B,42,9,0.237,100,29,0.459,142,41,0.335
Past Lives,9,22,100,2,B,693,96,0.138,693,96,0.223,1386,192,0.188
Past Lives,10,22,100,2,B,693,96,0.138,693,96,0.227,1386,192,0.19
Past Lives,11,22,100,2,B,693,96,0.135,693,96,0.232,1386,192,0.191
Past Lives,12,22,100,2,B,693,96,0.138,693,96,0.235,1386,192,0.194
Past Lives,1,23,100,2,B,693,96,0.138,693,96,0.24,1386,192,0.196
Past Lives,2,23,100,2,B,693,96,0.139,693,96,0.239,1386,192,0.196
Joy Ride,9,22,0,1,B,299,37,0.123,899,140,0.161,1198,177,0.148
Joy Ride,10,22,0,1,B,299,37,0.119,899,140,0.168,1198,180,0.15
Joy Ride,11,22,0,1,B,299,37,0.116,899,140,0.172,1198,181,0.151
Joy Ride,12,22,0,1,B,299,37,0.112,899,140,0.17,1198,177,0.148
Joy Ride,1,23,0,1,B,299,37,0.12,899,140,0.178,1198,186,0.155
Joy Ride,2,23,0,1,B,299,37,0.125,899,140,0.182,1198,192,0.16
Death Star MFH,9,22,150,5,C,90,17,0.189,210,58,0.298,300,75,0.25
Death Star MFH,10,22,150,5,C,90,17,0.181,210,58,0.34,300,79,0.263
Death Star MFH,11,22,150,5,C,90,17,0.24,210,58,0.37,300,92,0.307
Death Star MFH,12,22,150,5,C,90,17,0.236,210,58,0.362,300,90,0.3
Death Star MFH,1,23,150,5,C,90,17,0.213,210,58,0.4,300,91,0.303
Death Star MFH,2,23,150,5,C,90,17,0.22,210,58,0.339,300,86,0.287
Patagonia Not,9,22,75,4,C,492,90,0.183,492,90,0.25,984,180,0.225
Patagonia Not,10,22,75,4,C,492,90,0.187,492,90,0.251,984,180,0.227
Patagonia Not,11,22,75,4,C,492,90,0.189,492,90,0.255,984,180,0.23
Patagonia Not,12,22,75,4,C,492,90,0.191,492,90,0.26,984,180,0.234
Patagonia Not,1,23,75,4,C,492,90,0.198,492,90,0.261,984,180,0.238
Patagonia Not,2,23,75,4,C,492,90,0.197,492,90,0.273,984,180,0.244
Mos Eisley Cantina,9,22,175,7,D,143,26,0.184,290,75,0.274,433,101,0.233
Mos Eisley Cantina,10,22,175,7,D,143,26,0.198,290,75,0.286,433,106,0.245
Mos Eisley Cantina,11,22,175,7,D,143,26,0.202,290,75,0.307,433,111,0.256
Mos Eisley Cantina,12,22,175,7,D,143,26,0.206,290,75,0.349,433,120,0.277
Mos Eisley Cantina,1,23,175,7,D,143,26,0.187,290,75,0.365,433,118,0.273
Mos Eisley Cantina,2,23,175,7,D,143,26,0.186,290,75,0.353,433,117,0.27{
    "stakers": {
        "resident_count": 0,
        "delinquent_resident_count": 0,
        "delinquency": 0
    },
    "non_stakers": {
        "resident_count": 0,
        "delinquent_resident_count": 0,
        "delinquency": 0
    },
    "total": {
        "resident_count": 0,
        "delinquent_resident_count": 0,
        "delinquency": 0
    },
    "communities": {
        "a054S000000Bjg2QAC": {
            "stakers": {
                "resident_count": 0,
                "delinquent_resident_count": 0,
                "delinquency": 0
            },
            "non_stakers": {
                "resident_count": 0,
                "delinquent_resident_count": 0,
                "delinquency": 0
            },
            "total": {
                "resident_count": 0,
                "delinquent_resident_count": 0,
                "delinquency": 0
            }
        },
        "a054S000000BjfsQAC": {
            "stakers": {
                "resident_count": 0,
                "delinquent_resident_count": 0,
                "delinquency": 0
            },
            "non_stakers": {
                "resident_count": 0,
                "delinquent_resident_count": 0,
                "delinquency": 0
            },
            "total": {
                "resident_count": 0,
                "delinquent_resident_count": 0,
                "delinquency": 0
            }
        },
        "a054S000000BjfxQAC": {
            "stakers": {
                "resident_count": 0,
                "delinquent_resident_count": 0,
                "delinquency": 0
            },
            "non_stakers": {
                "resident_count": 0,
                "delinquent_resident_count": 0,
                "delinquency": 0
            },
            "total": {
                "resident_count": 0,
                "delinquent_resident_count": 0,
                "delinquency": 0
            }
        }
    }
}Here is a unit test for the `remove_zero_elements_account_level_delinquency` function:

```python
def test_remove_zero_elements_account_level_delinquency():
    data = {
        "months": [
            {
                "month": "09-22",
                "account_level": [
                    {
                        "level": "A",
                        "non_stakers": {
                            "delinquency": 0.134,
                            "delinquent_resident_count": 101,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.112,
                            "delinquent_resident_count": 63,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.124,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    {
                        "level": "B",
                        "non_stakers": {
                            "delinquency": 0.199,
                            "delinquent_resident_count": 404,
                            "resident_count": 2028
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 176,
                            "resident_count": 1334
                        },
                        "total": {
                            "delinquency": 0.173,
                            "delinquent_resident_count": 577,
                            "resident_count": 3326
                        }
                    },
                    {
                        "level": "C",
                        "non_stakers": {
                            "delinquency": 0.261,
                            "delinquent_resident_count": 202,
                            "resident_count": 775
                        },
                        "stakers": {
                            "delinquency": 0.185,
                            "delinquent_resident_count": 94,
                            "resident_count": 509
                        },
                        "total": {
                            "delinquency": 0.231,
                            "delinquent_resident_count": 296,
                            "resident_count": 1284
                        }
                    },
                    {
                        "level": "D",
                        "non_stakers": {},
                        "stakers": {},
                        "total": {}
                    }
                ]
            },
        ]
    }

    expected_result = {
        "months": [
            {
                "month": "09-22",
                "account_level": [
                    {
                        "level": "A",
                        "non_stakers": {
                            "delinquency": 0.134,
                            "delinquent_resident_count": 101,
                            "resident_count": 756
                        },
                        "stakers": {
                            "delinquency": 0.112,
                            "delinquent_resident_count": 63,
                            "resident_count": 564
                        },
                        "total": {
                            "delinquency": 0.124,
                            "delinquent_resident_count": 164,
                            "resident_count": 1320
                        }
                    },
                    {
                        "level": "B",
                        "non_stakers": {
                            "delinquency": 0.199,
                            "delinquent_resident_count": 404,
                            "resident_count": 2028
                        },
                        "stakers": {
                            "delinquency": 0.132,
                            "delinquent_resident_count": 176,
                            "resident_count": 1334
                        },
                        "total": {
                            "delinquency": 0.173,
                            "delinquent_resident_count": 577,
                            "resident_count": 3326
                        }
                    },
                    {
                        "level": "C",
                        "non_stakers": {
                            "delinquency": 0.261,
                            "delinquent_resident_count": 202,
                            "resident_count": 775
                        },
                        "stakers": {
                            "delinquency": 0.185,
                            "delinquent_resident_count": 94,
                            "resident_count": 509
                        },
                        "total": {
                            "delinquency": 0.231,
                            "delinquent_resident_count": 296,
                            "resident_count": 1284
                        }
                    }
                ]
            }
        ]
    }

    assert remove_zero_elements_account_level_delinquency(data) == expected_result
```

This test case verifies that the function correctly removes zero elements from the `account_level` dictionary in the `data` input.